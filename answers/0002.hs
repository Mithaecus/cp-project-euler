#!/usr/bin/env cabal
{- cabal:
build-depends: base
-}

-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
-- By considering the terms in the Fibonacci sequence whose values do not exceed 4,000,000, find the sum of the even-valued terms.

memoizedFib :: Int -> Integer
memoizedFib = (map fib [0 ..] !!)
   where fib 0 = 0
         fib 1 = 1
         fib n = memoizedFib (n-2) + memoizedFib (n-1)

fibList = [x | i <- [1..10000], let x = memoizedFib i, x < 4000000 && even x]

sumList :: [Integer] -> Integer
sumList []     = 0
sumList (x:xs) = x + sumList xs

answer = show $ sumList fibList

main = do
    putStrLn answer
